{"version":3,"sources":["components/Header.js","components/ErrorBoundary.js","components/PersonCard.js","components/LoadingSpinner.js","components/CharacterStats.js","components/CompareCharacters.js","components/HomePage.js","components/PersonDetail.js","components/App.js","index.js"],"names":["Header","history","useHistory","_jsx","className","children","_jsxs","onClick","push","ErrorBoundary","React","Component","constructor","arguments","state","hasError","error","getDerivedStateFromError","render","this","window","location","reload","props","PersonCard","_ref","person","id","url","split","imageError","setImageError","useState","CHARACTER_IMAGES","src","concat","encodeURIComponent","name","alt","onError","handleImageError","gender","birth_year","handleClick","LoadingSpinner","CharacterStats","character","formatValue","value","unit","numValue","parseInt","isNaN","stats","label","height","rawValue","max","mass","map","stat","style","width","CompareCharacters","characters","char1","setChar1","char2","setChar2","battleResult","setBattleResult","imageError1","setImageError1","imageError2","setImageError2","specialBattle","setSpecialBattle","ICONIC_BATTLES","message","animation","quote","useEffect","matchup1","matchup2","calculatePowerLevel","powerLevel","basePower","getImageUrl","characterId","indexOf","onChange","e","target","char","index","startBattle","power1","power2","result","specialOutcome","handleSpecialBattle","winner","description","_objectSpread","powerLevels","Math","round","powerDiff","abs","battleDescription","_Fragment","resetBattle","API_URL","HomePage","people","setPeople","allPeople","setAllPeople","searchTerm","setSearchTerm","isLoading","setIsLoading","setError","currentPage","setCurrentPage","totalPages","setTotalPages","windowWidth","setWindowWidth","innerWidth","showBattleMode","setShowBattleMode","async","allCharacters","nextUrl","response","fetch","ok","Error","data","json","results","next","err","fetchAllPeople","ceil","count","fetchData","handleResize","addEventListener","removeEventListener","filteredPeople","filter","toLowerCase","includes","handlePageChange","page","scrollTo","type","placeholder","length","disabled","Array","_","i","cache","planets","PersonDetail","match","setPerson","planet","setPlanet","neighbors","setNeighbors","isSubscribed","personId","params","homeworld","planetData","fetchNeighbors","personData","planetResponse","fetchPerson","currentPersonUrl","residentsPromises","residents","res","Promise","all","handleBack","goBack","eye_color","hair_color","neighbor","App","Switch","Route","exact","path","component","ReactDOM","Router","document","getElementById"],"mappings":"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","file":"static/js/main.c956b780.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = () => {\n    const history = useHistory();\n\n    return (\n        <header className=\"star-wars-header\">\n            <div className=\"header-content\">\n                <h1 \n                    onClick={() => history.push('/')}\n                    className=\"header-title\"\n                >\n                    Star Wars Characters\n                </h1>\n                <div className=\"header-decoration\"></div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header; ","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    state = { hasError: false, error: null };\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true, error };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"error-message\">\n                    <h2>Something went wrong!</h2>\n                    <button onClick={() => window.location.reload()}>\n                        Refresh Page\n                    </button>\n                </div>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary; ","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst PersonCard = ({ person }) => {\n    const history = useHistory();\n    const id = person.url.split('/')[5];\n    const [imageError, setImageError] = useState(false);\n\n    // Character images mapping\n    const CHARACTER_IMAGES = {\n        'Luke Skywalker': 'https://starwars-visualguide.com/assets/img/characters/1.jpg',\n        'C-3PO': 'https://starwars-visualguide.com/assets/img/characters/2.jpg',\n        'R2-D2': 'https://starwars-visualguide.com/assets/img/characters/3.jpg',\n        'Darth Vader': 'https://starwars-visualguide.com/assets/img/characters/4.jpg',\n        'Leia Organa': 'https://starwars-visualguide.com/assets/img/characters/5.jpg',\n        'Owen Lars': 'https://starwars-visualguide.com/assets/img/characters/6.jpg',\n        'Beru Whitesun lars': 'https://starwars-visualguide.com/assets/img/characters/7.jpg',\n        'R5-D4': 'https://starwars-visualguide.com/assets/img/characters/8.jpg',\n        'Biggs Darklighter': 'https://starwars-visualguide.com/assets/img/characters/9.jpg',\n        'Obi-Wan Kenobi': 'https://starwars-visualguide.com/assets/img/characters/10.jpg',\n    };\n\n    const getImageUrl = () => {\n        if (imageError) {\n            return `https://ui-avatars.com/api/?name=${encodeURIComponent(person.name)}&size=300&background=random`;\n        }\n        return CHARACTER_IMAGES[person.name] || `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`;\n    };\n\n    const handleImageError = () => {\n        setImageError(true);\n    };\n\n    const handleClick = () => {\n        history.push(`/person/${id}`);\n    };\n\n    return (\n        <div className=\"person-card\">\n            <div className=\"person-card-image\">\n                <img \n                    src={getImageUrl()}\n                    alt={person.name}\n                    onError={handleImageError}\n                />\n            </div>\n            <div className=\"person-card-content\">\n                <h2>{person.name}</h2>\n                <p><strong>Gender:</strong> {person.gender}</p>\n                <p><strong>Birth Year:</strong> {person.birth_year}</p>\n                <button className=\"view-button\" onClick={handleClick}>\n                    View Details\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default PersonCard;","import React from 'react';\n\nconst LoadingSpinner = () => (\n    <div className=\"loading-container\">\n        <div className=\"lightsaber-loader\">\n            <div className=\"lightsaber-handle\"></div>\n            <div className=\"lightsaber-blade\"></div>\n        </div>\n        <p>Loading from a galaxy far, far away...</p>\n    </div>\n);\n\nexport default LoadingSpinner; ","import React from 'react';\n\nconst CharacterStats = ({ character }) => {\n    const formatValue = (value, unit) => {\n        if (value === \"unknown\" || value === \"none\" || !value) {\n            return \"Unknown\";\n        }\n        const numValue = parseInt(value);\n        return isNaN(numValue) ? \"Unknown\" : `${numValue}${unit}`;\n    };\n\n    const stats = [\n        { \n            label: 'Height', \n            value: formatValue(character.height, 'cm'),\n            rawValue: parseInt(character.height) || 0,\n            max: 300 \n        },\n        { \n            label: 'Mass', \n            value: formatValue(character.mass, 'kg'),\n            rawValue: parseInt(character.mass) || 0,\n            max: 200 \n        },\n    ];\n\n    return (\n        <div className=\"stats-container\">\n            {stats.map(stat => (\n                <div key={stat.label} className=\"stat-bar\">\n                    <div className=\"stat-header\">\n                        <span className=\"stat-label\">{stat.label}</span>\n                        <span className=\"stat-value\">{stat.value}</span>\n                    </div>\n                    <div className=\"bar-container\">\n                        <div \n                            className={`bar-fill ${stat.value === \"Unknown\" ? 'unknown' : ''}`}\n                            style={{\n                                width: stat.value === \"Unknown\" \n                                    ? '30%' \n                                    : `${(stat.rawValue/stat.max) * 100}%`\n                            }}\n                        />\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CharacterStats; ","import React, { useState, useEffect } from 'react';\nimport CharacterStats from './CharacterStats';\n\nconst CompareCharacters = ({ characters }) => {\n    const [char1, setChar1] = useState(null);\n    const [char2, setChar2] = useState(null);\n    const [battleResult, setBattleResult] = useState(null);\n    const [imageError1, setImageError1] = useState(false);\n    const [imageError2, setImageError2] = useState(false);\n    const [specialBattle, setSpecialBattle] = useState(null);\n\n    // Define iconic battles with special messages and animations\n    const ICONIC_BATTLES = {\n        'Luke Skywalker-Darth Vader': {\n            message: \"The Force is strong in this family duel!\",\n            animation: 'force-clash',\n            quote: \"No, I am your father!\"\n        },\n        'Obi-Wan Kenobi-Darth Vader': {\n            message: \"A battle between master and apprentice!\",\n            animation: 'high-ground',\n            quote: \"You were the chosen one!\"\n        },\n        'Emperor Palpatine-Yoda': {\n            message: \"A clash between the most powerful Force users!\",\n            animation: 'force-lightning',\n            quote: \"The dark side of the Force is a pathway to many abilities some consider to be unnatural.\"\n        },\n        'Han Solo-Boba Fett': {\n            message: \"The smuggler versus the bounty hunter!\",\n            animation: 'blaster-duel',\n            quote: \"I've been looking forward to this for a long time.\"\n        },\n        'Leia Organa-Darth Vader': {\n            message: \"Father and daughter face off!\",\n            animation: 'force-family',\n            quote: \"The Force runs strong in my family.\"\n        }\n    };\n\n    // Check for iconic battle matchup\n    useEffect(() => {\n        if (char1 && char2) {\n            const matchup1 = `${char1.name}-${char2.name}`;\n            const matchup2 = `${char2.name}-${char1.name}`;\n            \n            if (ICONIC_BATTLES[matchup1]) {\n                setSpecialBattle(ICONIC_BATTLES[matchup1]);\n            } else if (ICONIC_BATTLES[matchup2]) {\n                setSpecialBattle(ICONIC_BATTLES[matchup2]);\n            } else {\n                setSpecialBattle(null);\n            }\n        }\n    }, [char1, char2]);\n\n    const calculatePowerLevel = (character) => {\n        // Base calculations\n        const height = parseInt(character.height) || 0;\n        const mass = parseInt(character.mass) || 0;\n        \n        if ((character.height === \"unknown\" || character.height === \"none\") &&\n            (character.mass === \"unknown\" || character.mass === \"none\")) {\n            return null;\n        }\n        \n        let powerLevel = (height * 0.6) + (mass * 0.4);\n        \n        // Special character base power levels - more thematic\n        const basePower = {\n            'Darth Vader': 200,\n            'Luke Skywalker': 190,\n            'Yoda': 200,\n            'Obi-Wan Kenobi': 180,\n            'Emperor Palpatine': 195,\n            'Leia Organa': 150,\n            'Han Solo': 140,\n            'Boba Fett': 145,\n            'General Grievous': 160,\n            'Chewbacca': 155\n        };\n\n        // If it's a special character, use their base power instead\n        if (basePower[character.name]) {\n            powerLevel = basePower[character.name];\n        }\n\n        return powerLevel;\n    };\n\n    const handleSpecialBattle = (char1, char2, power1, power2) => {\n        // Special case for Luke vs Vader\n        if ((char1.name === 'Luke Skywalker' && char2.name === 'Darth Vader') ||\n            (char2.name === 'Luke Skywalker' && char1.name === 'Darth Vader')) {\n            return {\n                winner: 'Luke Skywalker',\n                description: \"Turned to the light side and won!\",\n                quote: \"There is still good in you, Father!\",\n                animation: 'force-clash' // Keep the animation\n            };\n        }\n        return null;\n    };\n\n    const startBattle = () => {\n        if (!char1 || !char2) return;\n\n        const power1 = calculatePowerLevel(char1);\n        const power2 = calculatePowerLevel(char2);\n        \n        let result;\n        \n        if (power1 === null && power2 === null) {\n            result = \"Both fighters are shrouded in mystery - battle cannot be determined!\";\n        } else if (power1 === null) {\n            result = `${char2.name} wins by default - ${char1.name}'s power is unknown!`;\n        } else if (power2 === null) {\n            result = `${char1.name} wins by default - ${char2.name}'s power is unknown!`;\n        } else {\n            // Check for special battle outcome first\n            const specialOutcome = handleSpecialBattle(char1, char2, power1, power2);\n            \n            if (specialOutcome) {\n                result = {\n                    ...specialOutcome,\n                    powerLevels: {\n                        [char1.name]: Math.round(power1),\n                        [char2.name]: Math.round(power2)\n                    }\n                };\n            } else {\n                // Normal battle outcome\n                const winner = power1 > power2 ? char1 : char2;\n                const powerDiff = Math.abs(power1 - power2);\n                \n                let battleDescription;\n                if (powerDiff > 50) {\n                    battleDescription = \"Absolutely demolished their opponent!\";\n                } else if (powerDiff > 30) {\n                    battleDescription = \"Won with impressive strength!\";\n                } else {\n                    battleDescription = \"Barely won in an epic battle!\";\n                }\n\n                result = {\n                    winner: winner.name,\n                    description: battleDescription,\n                    powerLevels: {\n                        [char1.name]: Math.round(power1),\n                        [char2.name]: Math.round(power2)\n                    }\n                };\n            }\n        }\n\n        setBattleResult(result);\n    };\n\n    const resetBattle = () => {\n        // Reset all states in a single batch\n        setBattleResult(null);\n        setChar1(null);\n        setChar2(null);\n        setImageError1(false);\n        setImageError2(false);\n        setSpecialBattle(null);\n    };\n\n    // Character images mapping (reusing from PersonCard)\n    const getImageUrl = (character, id) => {\n        const CHARACTER_IMAGES = {\n            'Luke Skywalker': 'https://starwars-visualguide.com/assets/img/characters/1.jpg',\n            'C-3PO': 'https://starwars-visualguide.com/assets/img/characters/2.jpg',\n            'R2-D2': 'https://starwars-visualguide.com/assets/img/characters/3.jpg',\n            'Darth Vader': 'https://starwars-visualguide.com/assets/img/characters/4.jpg',\n            'Leia Organa': 'https://starwars-visualguide.com/assets/img/characters/5.jpg',\n            'Owen Lars': 'https://starwars-visualguide.com/assets/img/characters/6.jpg',\n            'Beru Whitesun lars': 'https://starwars-visualguide.com/assets/img/characters/7.jpg',\n            'R5-D4': 'https://starwars-visualguide.com/assets/img/characters/8.jpg',\n            'Biggs Darklighter': 'https://starwars-visualguide.com/assets/img/characters/9.jpg',\n            'Obi-Wan Kenobi': 'https://starwars-visualguide.com/assets/img/characters/10.jpg',\n        };\n\n        if (!character) return '';\n        const characterId = character.url.split('/')[5];\n        return CHARACTER_IMAGES[character.name] || \n               `https://starwars-visualguide.com/assets/img/characters/${characterId}.jpg`;\n    };\n\n    return (\n        <div className=\"compare-panel\">\n            <h2>Character Battle Arena</h2>\n            <div className=\"battle-selection\">\n                <div className=\"character-selector\">\n                    <h3>Choose Fighter 1</h3>\n                    <div className=\"character-portrait\">\n                        {char1 && (\n                            <img \n                                src={!imageError1 ? getImageUrl(char1) : `https://ui-avatars.com/api/?name=${encodeURIComponent(char1.name)}&size=300&background=random`}\n                                alt={char1.name}\n                                onError={() => setImageError1(true)}\n                            />\n                        )}\n                    </div>\n                    <select \n                        value={char1 ? characters.indexOf(char1) : ''}\n                        onChange={(e) => {\n                            const value = e.target.value;\n                            setImageError1(false);\n                            setSpecialBattle(null);\n                            setBattleResult(null);\n                            setChar1(value === '' ? null : characters[value]);\n                        }}\n                    >\n                        <option value=\"\">Select a character...</option>\n                        {characters.map((char, index) => (\n                            <option key={index} value={index}>\n                                {char.name}\n                            </option>\n                        ))}\n                    </select>\n                    {char1 && <CharacterStats character={char1} />}\n                </div>\n\n                <div className=\"battle-divider\">\n                    <div className=\"vs-symbol\">VS</div>\n                    {char1 && char2 && !battleResult && (\n                        <div className=\"lightsaber-cross\">\n                            <div className=\"lightsaber blue\"></div>\n                            <div className=\"lightsaber red\"></div>\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"character-selector\">\n                    <h3>Choose Fighter 2</h3>\n                    <div className=\"character-portrait\">\n                        {char2 && (\n                            <img \n                                src={!imageError2 ? getImageUrl(char2) : `https://ui-avatars.com/api/?name=${encodeURIComponent(char2.name)}&size=300&background=random`}\n                                alt={char2.name}\n                                onError={() => setImageError2(true)}\n                            />\n                        )}\n                    </div>\n                    <select \n                        value={char2 ? characters.indexOf(char2) : ''}\n                        onChange={(e) => {\n                            const value = e.target.value;\n                            setImageError2(false);\n                            setSpecialBattle(null);\n                            setBattleResult(null);\n                            setChar2(value === '' ? null : characters[value]);\n                        }}\n                    >\n                        <option value=\"\">Select a character...</option>\n                        {characters.map((char, index) => (\n                            <option key={index} value={index}>\n                                {char.name}\n                            </option>\n                        ))}\n                    </select>\n                    {char2 && <CharacterStats character={char2} />}\n                </div>\n            </div>\n\n            <div className=\"battle-controls\">\n                {char1 && char2 ? (\n                    <button \n                        className=\"battle-button\" \n                        onClick={startBattle}\n                    >\n                        Start Battle!\n                    </button>\n                ) : (\n                    <p>Select two characters to begin the battle!</p>\n                )}\n            </div>\n\n            {specialBattle && !battleResult && (\n                <div className={`special-battle-alert ${specialBattle.animation}`}>\n                    <p className=\"special-battle-message\">{specialBattle.message}</p>\n                    <p className=\"special-battle-quote\">\"{specialBattle.quote}\"</p>\n                </div>\n            )}\n\n            {battleResult && (\n                <div className=\"battle-result\">\n                    <div className=\"winner-announcement\">\n                        {typeof battleResult === 'string' ? (\n                            <h3>{battleResult}</h3>\n                        ) : (\n                            <>\n                                <h3>{battleResult.winner} {battleResult.description}</h3>\n                                {battleResult.quote && (\n                                    <p className=\"iconic-quote\">\"{battleResult.quote}\"</p>\n                                )}\n                                <div className=\"victory-animation\"></div>\n                                <div className=\"power-levels\">\n                                    <p>{char1.name}'s Power Level: {battleResult.powerLevels[char1.name]}</p>\n                                    <p>{char2.name}'s Power Level: {battleResult.powerLevels[char2.name]}</p>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                    <button \n                        className=\"reset-button\" \n                        onClick={resetBattle}\n                    >\n                        Reset Battle\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CompareCharacters; ","import React, { useState, useEffect } from 'react';\nimport PersonCard from './PersonCard';\nimport LoadingSpinner from './LoadingSpinner';\nimport CompareCharacters from './CompareCharacters';\n\nconst API_URL = 'https://swapi.py4e.com/api/'\n\nconst HomePage = () => {\n    const [people, setPeople] = useState([]);\n    const [allPeople, setAllPeople] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const [showBattleMode, setShowBattleMode] = useState(false);\n\n    useEffect(() => {\n        const fetchAllPeople = async () => {\n            try {\n                let allCharacters = [];\n                let nextUrl = `${API_URL}/people/`;\n\n                while (nextUrl) {\n                    const response = await fetch(nextUrl);\n                    if (!response.ok) throw new Error('Failed to fetch data');\n                    const data = await response.json();\n                    allCharacters = [...allCharacters, ...data.results];\n                    nextUrl = data.next;\n                }\n\n                setAllPeople(allCharacters);\n            } catch (err) {\n                setError(err.message);\n            }\n        };\n\n        fetchAllPeople();\n    }, []);\n\n    useEffect(() => {\n        if (!searchTerm) {\n            const fetchData = async () => {\n                try {\n                    setIsLoading(true);\n                    const response = await fetch(`${API_URL}/people/?page=${currentPage}`);\n                    if (!response.ok) {\n                        throw new Error('Failed to fetch data');\n                    }\n                    const data = await response.json();\n                    setPeople(data.results);\n                    setTotalPages(Math.ceil(data.count / 10));\n                } catch (err) {\n                    setError(err.message);\n                } finally {\n                    setIsLoading(false);\n                }\n            };\n\n            fetchData();\n        }\n    }, [currentPage, searchTerm]);\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    const filteredPeople = searchTerm\n        ? allPeople.filter(person =>\n            person.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        : people;\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n        window.scrollTo(0, 0);\n    };\n\n    const renderPaginationButtons = () => {\n        if (windowWidth <= 480) {\n            return (\n                <>\n                    <button \n                        onClick={() => handlePageChange(currentPage - 1)}\n                        disabled={currentPage === 1}\n                    >\n                        Previous\n                    </button>\n                    <button className=\"active\">\n                        {currentPage} / {totalPages}\n                    </button>\n                    <button \n                        onClick={() => handlePageChange(currentPage + 1)}\n                        disabled={currentPage === totalPages}\n                    >\n                        Next\n                    </button>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <button \n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                >\n                    Previous\n                </button>\n                {[...Array(totalPages)].map((_, i) => (\n                    <button\n                        key={i + 1}\n                        onClick={() => handlePageChange(i + 1)}\n                        className={currentPage === i + 1 ? 'active' : ''}\n                    >\n                        {i + 1}\n                    </button>\n                ))}\n                <button \n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                >\n                    Next\n                </button>\n            </>\n        );\n    };\n\n    if (error) return <div className=\"error-message\">Error: {error}</div>;\n\n    return (\n        <div className=\"home-page\">\n            <div className=\"content-container\">\n                <div className=\"mode-toggle\">\n                    <button \n                        className={`mode-button ${!showBattleMode ? 'active' : ''}`}\n                        onClick={() => setShowBattleMode(false)}\n                    >\n                        Browse Mode\n                    </button>\n                    <button \n                        className={`mode-button ${showBattleMode ? 'active' : ''}`}\n                        onClick={() => setShowBattleMode(true)}\n                    >\n                        Battle Mode\n                    </button>\n                </div>\n\n                {showBattleMode ? (\n                    <CompareCharacters characters={allPeople} />\n                ) : (\n                    <>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search Characters...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                        <div className=\"card-container\">\n                            {isLoading && !searchTerm ? (\n                                <LoadingSpinner />\n                            ) : filteredPeople.length > 0 ? (\n                                filteredPeople.map((person, index) => (\n                                    <PersonCard key={index} person={person} />\n                                ))\n                            ) : (\n                                <p>No characters found</p>\n                            )}\n                        </div>\n                        {!searchTerm && (\n                            <div className=\"pagination\">\n                                {renderPaginationButtons()}\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst API_URL = 'https://swapi.py4e.com/api/';\n// Simple cache object\nconst cache = {\n    people: {},\n    planets: {}\n};\n\nconst PersonDetail = ({ match }) => {\n    const [person, setPerson] = useState(null);\n    const [planet, setPlanet] = useState(null);\n    const [neighbors, setNeighbors] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [imageError, setImageError] = useState(false);\n    const history = useHistory();\n\n    // Character images mapping\n    const CHARACTER_IMAGES = {\n        'Luke Skywalker': 'https://starwars-visualguide.com/assets/img/characters/1.jpg',\n        'C-3PO': 'https://starwars-visualguide.com/assets/img/characters/2.jpg',\n        'R2-D2': 'https://starwars-visualguide.com/assets/img/characters/3.jpg',\n        'Darth Vader': 'https://starwars-visualguide.com/assets/img/characters/4.jpg',\n        'Leia Organa': 'https://starwars-visualguide.com/assets/img/characters/5.jpg',\n        'Owen Lars': 'https://starwars-visualguide.com/assets/img/characters/6.jpg',\n        'Beru Whitesun lars': 'https://starwars-visualguide.com/assets/img/characters/7.jpg',\n        'R5-D4': 'https://starwars-visualguide.com/assets/img/characters/8.jpg',\n        'Biggs Darklighter': 'https://starwars-visualguide.com/assets/img/characters/9.jpg',\n        'Obi-Wan Kenobi': 'https://starwars-visualguide.com/assets/img/characters/10.jpg',\n    };\n\n    const getImageUrl = (character) => {\n        if (!character) return '';\n        const characterId = character.url.split('/')[5];\n        return CHARACTER_IMAGES[character.name] || \n               `https://starwars-visualguide.com/assets/img/characters/${characterId}.jpg`;\n    };\n\n    useEffect(() => {\n        let isSubscribed = true;\n        const fetchPerson = async () => {\n            try {\n                setIsLoading(true);\n                const personId = match.params.id;\n\n                // Check cache first\n                if (cache.people[personId]) {\n                    setPerson(cache.people[personId]);\n                    if (cache.planets[cache.people[personId].homeworld]) {\n                        const planetData = cache.planets[cache.people[personId].homeworld];\n                        setPlanet(planetData);\n                        await fetchNeighbors(planetData, cache.people[personId].url);\n                        return;\n                    }\n                }\n\n                // Fetch person if not cached\n                const response = await fetch(`${API_URL}/people/${personId}/`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch person data');\n                }\n                const personData = await response.json();\n                cache.people[personId] = personData;\n                if (isSubscribed) {\n                    setPerson(personData);\n                }\n\n                // Fetch planet data\n                const planetResponse = await fetch(personData.homeworld);\n                if (!planetResponse.ok) {\n                    throw new Error('Failed to fetch planet data');\n                }\n                const planetData = await planetResponse.json();\n                cache.planets[personData.homeworld] = planetData;\n                if (isSubscribed) {\n                    setPlanet(planetData);\n                    await fetchNeighbors(planetData, personData.url);\n                }\n            } catch (err) {\n                if (isSubscribed) {\n                    setError(err.message);\n                }\n            } finally {\n                if (isSubscribed) {\n                    setIsLoading(false);\n                }\n            }\n        };\n\n        fetchPerson();\n        return () => {\n            isSubscribed = false;\n        };\n    }, [match.params.id]);\n\n    const fetchNeighbors = async (planetData, currentPersonUrl) => {\n        const residentsPromises = planetData.residents\n            .filter(url => url !== currentPersonUrl)\n            .map(async url => {\n                if (cache.people[url]) {\n                    return cache.people[url];\n                }\n                const res = await fetch(url);\n                const data = await res.json();\n                cache.people[url] = data;\n                return data;\n            });\n        const residents = await Promise.all(residentsPromises);\n        setNeighbors(residents);\n    };\n\n    const handleBack = () => {\n        history.goBack(); // This will go to the previous page in history\n    };\n\n    if (error) return <div className=\"error-message\">Error: {error}</div>;\n    if (isLoading) return <LoadingSpinner />;\n    if (!person || !planet) return null;\n\n    return (\n        <div className=\"person-detail\">\n            <button className=\"back-button\" onClick={handleBack}>\n                ← Back\n            </button>\n            \n            <div className=\"person-detail-header\">\n                <div className=\"character-portrait detail-portrait\">\n                    <img \n                        src={!imageError ? getImageUrl(person) : `https://ui-avatars.com/api/?name=${encodeURIComponent(person.name)}&size=300&background=random`}\n                        alt={person.name}\n                        onError={() => setImageError(true)}\n                    />\n                </div>\n                <h1>{person.name}</h1>\n            </div>\n\n            <div className=\"person-info\">\n                <p><strong>Height:</strong> {person.height === \"unknown\" ? \"Unknown\" : `${person.height}cm`}</p>\n                <p><strong>Mass:</strong> {person.mass === \"unknown\" ? \"Unknown\" : `${person.mass}kg`}</p>\n                <p><strong>Birth Year:</strong> {person.birth_year}</p>\n                <p><strong>Gender:</strong> {person.gender}</p>\n                <p><strong>Eye Color:</strong> {person.eye_color}</p>\n                <p><strong>Hair Color:</strong> {person.hair_color}</p>\n                <p><strong>Home Planet:</strong> {planet.name}</p>\n            </div>\n\n            <div className=\"neighbors\">\n                <h2>Planet Neighbors from {planet.name}</h2>\n                {neighbors.length > 0 ? (\n                    <div className=\"neighbors-grid\">\n                        {neighbors.map((neighbor, index) => (\n                            <div \n                                key={index} \n                                className=\"neighbor-card\"\n                                onClick={() => {\n                                    const id = neighbor.url.split('/')[5];\n                                    history.push(`/person/${id}`);\n                                }}\n                            >\n                                <h3>{neighbor.name}</h3>\n                                <p>Birth Year: {neighbor.birth_year}</p>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p>No other residents found on this planet</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default PersonDetail;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport ErrorBoundary from './ErrorBoundary';\nimport HomePage from './HomePage';\nimport PersonDetail from './PersonDetail';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Header />\n            <ErrorBoundary>\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/person/:id\" component={PersonDetail} />\n                </Switch>\n            </ErrorBoundary>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);"],"sourceRoot":""}